// Find the contiguous sub-array with maximum sum
#include <bits/stdc++.h>
using namespace std;


int main()
{
    int n,max_sum=0,current_sum=0;
    cin>>n;
    int a[n];
    for (int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    cout<<endl;
    for(int i=0;i<n;i++)
    {
        cout<<" "<<a[i];
    }
    cout<<endl;
    for(int i=0;i<n;i++)
    {
        current_sum=current_sum+a[i];
        if(current_sum>max_sum)
        {
            max_sum=current_sum;
        }
        if(current_sum<0)
        {
            current_sum=0;
        }
    }
    cout<<"The maximum sum is "<<max_sum;
}
// another solution 
int count=0,maxx=0;
        for(int i=0;i<n;i++)
        {
            if(a[i]<0)
                count+=1;
        }
        if(count==n)
        {
            sort(a,a+n);
            return a[n-1];
        }
        else
        {
            int sum=0;
            for(int i=0;i<n;i++)
            {
                sum=sum+a[i];
                maxx=max(sum,maxx);
                if(sum<0)
                {
                    sum=0;
                }
            }
        }
        return maxx;
        
    }
